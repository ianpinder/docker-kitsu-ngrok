version: '3.5'

x-base: &base
    restart: always
    networks:
        - internal

x-env: &env
    env_file:
        - ${ENV_FILE:-./env}

x-backend-volumes: &backend_volumes
    volumes:
        - 'previews:${PREVIEW_FOLDER:-/opt/zou/previews}'
        - 'tmp:${TMP_DIR:-/tmp/zou}'

services:

    ngrok:
        # platform: linux/x86_64
        container_name: ${COMPOSE_PROJECT_NAME}-ngrok
        image: ngrok/ngrok
        command:
            - "http"
            - "--region"
            - "eu"
            - "nginx:80"
            - "--authtoken"
            - "${NGROK_AUTHTOKEN}"
            - "--hostname=gwdoodles.com"
        networks:
            - internal
        restart: on-failure:5
        depends_on:
            - nginx
        
    nginx:
        image: nginx:latest
        container_name: ${COMPOSE_PROJECT_NAME}-nginx-proxy
        volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
        - ./nginx.default.conf:/etc/nginx/conf.d/default.conf:ro
        - ./certs:/etc/letsencrypt/live:ro
        - ./copy_certs.sh:/usr/local/bin/copy_certs.sh:ro

        ports:
            - "80:80"
            - "443:443"
        networks:
            - internal

        depends_on:
            - zou-app
            - zou-event
            - zou-jobs
            - kitsu
        entrypoint: ["/usr/local/bin/copy_certs.sh"]
            


    kitsu:
        # platform: linux/x86_64
        <<: [*base, *env]
        container_name: ${COMPOSE_PROJECT_NAME}-kitsu
        image: registry.gitlab.com/mathbou/docker-cgwire/kitsu:${KITSU_VERSION}
        depends_on:
            - zou-app
            - zou-event
            - zou-jobs
        networks:
            - internal

    zou-app:
        # platform: linux/x86_64
        <<: [*base,*env, *backend_volumes]
        container_name: ${COMPOSE_PROJECT_NAME:?}-zou-app
        image: registry.gitlab.com/mathbou/docker-cgwire/zou:${ZOU_VERSION:-latest}
        depends_on:
          - db
          - indexer
        command: "gunicorn --error-logfile - --access-logfile - -w 3 -k gevent -b :5000 zou.app:app"
        networks:
            - internal

    zou-event:
        # platform: linux/x86_64
        <<: [*base, *env]
        container_name: ${COMPOSE_PROJECT_NAME:?}-zou-event
        image: registry.gitlab.com/mathbou/docker-cgwire/zou:${ZOU_VERSION:-latest}
        depends_on:
          - redis
        command: "gunicorn --error-logfile - --access-logfile - -w 1 -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker -b :5001 zou.event_stream:app"
        networks:
            - internal

    zou-jobs:
        <<: [*base, *env, *backend_volumes]
        platform: linux/x86_64
        container_name: ${COMPOSE_PROJECT_NAME:?}-zou-jobs
        image: registry.gitlab.com/mathbou/docker-cgwire/zou:${ZOU_VERSION:-latest}        
        command: "rq worker -c zou.job_settings"
        networks:
            - internal

    db:
        <<: *base
        container_name: ${COMPOSE_PROJECT_NAME:?}-db-${DB_VERSION:?}
        image: postgres:${DB_VERSION:?}-alpine
        volumes:
            - 'db:/var/lib/postgresql/data'
            - ./db/pg_ctl.conf:/etc/postgresql/${DB_VERSION:?}/main/pg_ctl.conf:ro
        environment:
            - POSTGRES_PASSWORD=${DB_PASSWORD:?}
        networks:
            - internal

    redis:
        <<: *base
        container_name: ${COMPOSE_PROJECT_NAME:?}-redis
        image: redis:alpine
        volumes:
            - 'redis:/data'
        networks:
            - internal
    
    indexer:
        <<: *base
        container_name: ${COMPOSE_PROJECT_NAME:?}-indexer
        image: getmeili/meilisearch:${INDEXER_VERSION:?}
        volumes:
            - 'indexer:/meili_data'
        environment:
            - MEILI_MASTER_KEY=${INDEXER_KEY:?}
        networks:
            - internal

volumes:
    db:
        name: ${COMPOSE_PROJECT_NAME:?}-db-${DB_VERSION:?}
    redis:
        name: ${COMPOSE_PROJECT_NAME:?}-redis
    previews:
        name: ${COMPOSE_PROJECT_NAME:?}-previews
    tmp:
        name: ${COMPOSE_PROJECT_NAME:?}-tmp
    indexer:
        name: ${COMPOSE_PROJECT_NAME:?}-indexer
        
networks:
    internal:
        name: ${COMPOSE_PROJECT_NAME:?}-internal
